{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Sweet.js","components/SweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigator.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","console","log","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","action","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Sweet","sweetObj","isOwner","editing","setEditing","text","newSweet","setNewSweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","alt","src","width","height","SweetFactory","userObj","sweet","setSweet","attachment","setAttachment","storageRef","ref","attachmentRef","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","currentTarget","Home","sweets","setSweets","useEffect","onSnapshot","snapshot","sweetArray","docs","map","data","Profile","refreshUser","navigate","useNavigate","displayName","newDisplayName","setNewDisplayName","getMySweets","where","orderBy","get","updateProfile","signOut","Navigator","to","AppRouter","isLoggedIn","exact","path","element","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c57fc75.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState('');\n\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name === 'email') {\n            setEmail(value);\n        } else if(name === 'password') {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        try {\n            if(newAccount) {\n                console.log(email, password);\n                await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                await authService.signInWithEmailAndPassword(email, password);\n            }\n        }   catch(error) {\n           setError(error.message);\n        }        \n    };\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form action=\"\" onSubmit={onSubmit}>\n                <input name=\"email\" onChange={onChange} type=\"text\" placeholder=\"Email\" required value={email} />\n                <input name=\"password\" onChange={onChange} type=\"password\" placeholder=\"Password\" required value={password} />\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n                {error && <h1>{error}</h1>}\n            </form>\n            <span onClick={toggleAccount}>{newAccount ? \"Log In\" : \"Create Account\" }</span>\n        </>\n    )\n}\n\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\n\nconst Auth = () => {\n\n    const onSocialClick = async (event) => {\n        const { target: {name} } = event;\n        let provider;\n        if(name === 'google') {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }   else if (name === 'github') {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    }\n\n    return (\n        <div>\n            <AuthForm />\n            <div>\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n            </div>\n        </div>\n    )\n}\n    ;\n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Sweet = ({ sweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newSweet, setNewSweet] = useState(sweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure to delete this sweet?\");\n        if(ok) {\n            await dbService.doc(`Sweets/${sweetObj.id}`).delete();\n            await storageService.refFromURL(sweetObj.attachmentUrl).delete();\n        }\n    }\n\n    const toggleEditing = () => {\n        setEditing((prev) => !prev);\n    } \n\n    const onChange = (event) => {\n        const {target: {value}} = event;\n        setNewSweet(value);\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`Sweets/${sweetObj.id}`).update({\n            text: newSweet\n        });\n        setEditing(false);\n    }\n\n    return (\n        <div>\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit}>\n                        <input type=\"text\" onChange={onChange} placeholder=\"Edit your sweet\" value={newSweet} required />\n                        <input type=\"submit\" value=\"Edit Sweet!\" />\n                    </form>\n                    <button onClick={toggleEditing}>Cancel</button>\n                </>\n            ) : (\n                <>\n                    <h4>{sweetObj.text}</h4>\n                    {sweetObj.attachmentUrl && <img alt={sweetObj.text} src={sweetObj.attachmentUrl} width=\"70px\" height=\"70px\" />}\n                    {isOwner && (\n                        <>\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\n                            <button onClick={toggleEditing}>Edit Nweet</button>\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    )\n};\n\nexport default Sweet;","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst SweetFactory = ({userObj}) => {\n\n    const [sweet, setSweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== \"\") {\n            const storageRef = storageService.ref();\n            const attachmentRef = storageRef.child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const sweetObj = {\n            text: sweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl: attachmentUrl\n        }\n        await dbService.collection(\"Sweets\").add(sweetObj);\n        setSweet(\"\");\n        setAttachment(\"\");\n    }\n    const  onChange = (event) => {\n        const {target: {value}} = event;\n        setSweet(value);\n    }\n\n    const onFileChange = (event) => {\n        const {target: {files}} = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.readAsDataURL(theFile);\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: {result}} = finishedEvent;\n            setAttachment(result);\n        }\n    }\n\n    const onClearAttachment = () => setAttachment(null);\n\n return (\n    <form onSubmit={onSubmit} action=\"\">\n        <input value={sweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n        {attachment && (\n            <div>\n                <img alt=\"uploading\" src={attachment} width=\"50px\" height=\"50px\" />\n                <button onClick={onClearAttachment}>Clear</button>\n            </div>\n        )}\n        <input type=\"submit\" value=\"Sweet\" />\n    </form>\n )\n}\n\nexport default SweetFactory;","import Sweet from \"components/Sweet\";\nimport SweetFactory from \"components/SweetFactory\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\n\n const Home = ({ userObj }) => {\n\n    const [sweets, setSweets] = useState([]);\n\n    useEffect(() => {\n        dbService.collection(\"Sweets\").onSnapshot((snapshot) => {\n            \n            const sweetArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            setSweets(sweetArray);\n        })\n    }, []);\n    \n     return (\n         <div> \n             <SweetFactory userObj={userObj} />\n             <div>\n                 {sweets.map(sweet => (\n                     <Sweet \n                     key={sweet.id} \n                     sweetObj={sweet} \n                     isOwner={sweet.creatorId === userObj.uid} \n                     attachmentUrl={sweet.attachmentUrl}\n                     />\n                 ))}\n             </div>\n         </div>\n     )\n }\n\n export default Home;","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n    const navigate = useNavigate();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        navigate(\"/\");\n    };\n    const getMySweets = async () => {\n        const sweets = await dbService\n        .collection(\"Sweets\")\n        .where(\"creatorId\", \"==\", userObj.uid)\n        .orderBy(\"createdAt\", \"desc\")\n        .get();\n        console.log(sweets.docs.map((doc) => doc.data()));\n    }\n\n    const onChange = (event) => {\n        const {target: {value}} = event;\n        setNewDisplayName(value);\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName\n            });\n        }\n        refreshUser();\n    }\n\n    useEffect(()=>{\n        getMySweets();\n    }, []);\n\n    return (\n        <>\n            <div>\n                <form onSubmit={onSubmit}>\n                    <input onChange={onChange} type=\"text\" value={newDisplayName} />\n                    <input type=\"submit\" value=\"Update Profile\" />\n                </form>\n            </div>\n            <button onClick={onLogOutClick}>Log out</button>\n        </>\n    )\n};\n\nexport default Profile;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigator = ({ userObj }) => (\n    <ul>\n        <li>\n            <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n            <Link to=\"/profile\">{userObj.displayName}'s Profile</Link>\n        </li>\n    </ul>\n)\n\nexport default Navigator;","import React from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigator from \"components/Navigator\";\n\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigator userObj={userObj} refreshUser={refreshUser} />}\n            <Routes>\n                {isLoggedIn ? (\n                    <>\n                        <Route exact path=\"/\" element={<Home userObj={userObj} refreshUser={refreshUser} />}>\n                        </Route>\n                        <Route exact path=\"/profile\" element={<Profile userObj={userObj} refreshUser={refreshUser} />}>\n                        </Route>\n                    </>\n                )\n                 : (\n                    <Route exact path=\"/\" element={<Auth />}>\n                    </Route>\n                )}\n            </Routes>\n        </Router>\n    )\n}\n\nexport default AppRouter;","import AppRouter from \"components/Router\";\nimport React, {useEffect, useState} from \"react\";\nimport { authService } from \"fbase\";\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    })\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n  }\n\n  return (\n    <>\n    { init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} refreshUser={refreshUser} /> : \"Loading...\"}\n    <footer>&copy; Switter {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}